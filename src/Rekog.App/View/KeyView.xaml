<UserControl x:Class="Rekog.App.View.KeyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mx="clr-namespace:Rekog.App.Markup"
             xmlns:v="clr-namespace:Rekog.App.View"
             xmlns:vm="clr-namespace:Rekog.App.ViewModel"
             d:DataContext="{d:DesignInstance vm:KeyViewModel, IsDesignTimeCreatable=False}"
             d:Height="200"
             d:Width="200"
             mc:Ignorable="d">
    <Canvas x:Name="LayoutRoot"
            Background="{x:Null}">
        <Path Clip="{Binding Shape}" Data="{Binding Shape}">
            <Path.Style>
                <Style TargetType="{x:Type Path}">
                    <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource LightenColorToSolidColorBrushConverter}, ConverterParameter={mx:Double 0.90}}" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SteppedShape, Converter={StaticResource NotNullToBooleanConverter}}" Value="True">
                            <Setter Property="Fill" Value="{Binding Color, Converter={StaticResource LightenColorToSolidColorBrushConverter}, ConverterParameter={mx:Double 0.82}}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>
        </Path>
        <Path Clip="{Binding SteppedShape}"
              Data="{Binding SteppedShape}"
              Fill="{Binding Color, Converter={StaticResource LightenColorToSolidColorBrushConverter}, ConverterParameter={mx:Double 0.90}}"
              StrokeThickness="0"
              Visibility="{Binding SteppedShape, Converter={StaticResource NotNullToVisibilityConverter}}" />
        <Path x:Name="InnerPath"
              Clip="{Binding InnerShape}"
              Data="{Binding InnerShape}"
              Fill="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}"
              Stroke="{Binding Color, Converter={StaticResource LightenColorToSolidColorBrushConverter}, ConverterParameter={mx:Double 0.85}}"
              RenderTransformOrigin="0.5,0.5"
              StrokeThickness="{Binding Source={mx:Double 0.03}, Converter={StaticResource ScaleConverter}, Mode=OneTime}">
            <Path.RenderTransform>
                <TranslateTransform X="{Binding InnerShapeOffset.X, Converter={StaticResource ScaleConverter}}" Y="{Binding InnerShapeOffset.Y, Converter={StaticResource ScaleConverter}}" />
            </Path.RenderTransform>
        </Path>
        <ItemsControl Canvas.Left="{Binding Data.Bounds.X, ElementName=InnerPath}"
                      Canvas.Top="{Binding Data.Bounds.Y, ElementName=InnerPath}"
                      Clip="{Binding Shape}"
                      Width="{Binding Data.Bounds.Width, ElementName=InnerPath}"
                      Height="{Binding Data.Bounds.Height, ElementName=InnerPath}"
                      Padding="{Binding Model.InnerPadding, Converter={StaticResource ScaleConverter}}"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      IsHitTestVisible="False"
                      IsTabStop="False"
                      ItemsSource="{Binding Legends.Values}">
            <ItemsControl.RenderTransform>
                <TranslateTransform X="{Binding InnerShapeOffset.X, Converter={StaticResource ScaleConverter}}" Y="{Binding InnerShapeOffset.Y, Converter={StaticResource ScaleConverter}}" />
            </ItemsControl.RenderTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="{x:Type ContentPresenter}">
                    <Setter Property="Panel.ZIndex" Value="{Binding Layer.Model.Order}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:LegendViewModel}">
                    <TextBlock Margin="{Binding Margin, Converter={StaticResource ScaleConverter}}"
                               TextAlignment="{Binding Model.Alignment, ConverterParameter=T, Converter={StaticResource LegendAlignmentConverter}}"
                               VerticalAlignment="{Binding Model.Alignment, ConverterParameter=V, Converter={StaticResource LegendAlignmentConverter}}"
                               Foreground="{Binding Color, Converter={StaticResource ColorToSolidColorBrushConverter}}"
                               FontFamily="{Binding Font}"
                               FontSize="{Binding Model.Size}"
                               FontStyle="{Binding Model.Italic, Converter={StaticResource BooleanToFontStyleConverter}}"
                               FontWeight="{Binding Model.Bold, Converter={StaticResource BooleanToFontWeightConverter}}"
                               IsHitTestVisible="True"
                               Text="{Binding Model.Value}"
                               TextWrapping="Wrap" />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Path Clip="{Binding Shape}" Data="{Binding Shape}">
            <Path.Resources>
                <SolidColorBrush x:Key="MouseOverFillBrush">#10000000</SolidColorBrush>
                <SolidColorBrush x:Key="PreviewSelectedFillBrush">#2a000000</SolidColorBrush>
                <SolidColorBrush x:Key="SelectedStrokeBrush">#e66</SolidColorBrush>
            </Path.Resources>
            <Path.Style>
                <Style TargetType="{x:Type Path}">
                    <Setter Property="Fill" Value="Transparent" />
                    <Setter Property="Stroke" Value="{Binding Color, Converter={StaticResource LightenColorToSolidColorBrushConverter}, ConverterParameter={mx:Double 0.55}}" />
                    <Setter Property="StrokeThickness" Value="{Binding Source={mx:Double 0.03}, Converter={StaticResource ScaleConverter}, Mode=OneTime}" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=LayoutRoot}" Value="True" />
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource EnumIsInConverter}">
                                            <Binding Path="State" RelativeSource="{RelativeSource AncestorType={x:Type v:BoardView}}" />
                                            <Binding Source="{x:Static v:BoardViewState.None}" />
                                            <Binding Source="{x:Static v:BoardViewState.ClickSelecting}" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" Value="{StaticResource MouseOverFillBrush}" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="Stroke" Value="{StaticResource SelectedStrokeBrush}" />
                            <Setter Property="StrokeThickness" Value="{Binding Source={mx:Double 0.06}, Converter={StaticResource ScaleConverter}, Mode=OneTime}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsPreviewSelected, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="True">
                            <Setter Property="Fill" Value="{StaticResource PreviewSelectedFillBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Path.Style>
        </Path>
    </Canvas>
</UserControl>
