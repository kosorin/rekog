<UserControl x:Class="Rekog.App.View.BoardView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:a="clr-namespace:Rekog.App.Behaviors.AttachedProperties"
             xmlns:m="clr-namespace:Rekog.App.Model"
             xmlns:mx="clr-namespace:Rekog.App.Markup"
             xmlns:v="clr-namespace:Rekog.App.View"
             xmlns:vm="clr-namespace:Rekog.App.ViewModel"
             d:Height="200"
             d:Width="200"
             Background="#D0D0D0"
             Focusable="True"
             IsTabStop="True"
             LostMouseCapture="UserControl_LostMouseCapture"
             PreviewKeyDown="UserControl_PreviewKeyDown"
             PreviewMouseDown="UserControl_PreviewMouseDown"
             PreviewMouseMove="UserControl_PreviewMouseMove"
             PreviewMouseUp="UserControl_PreviewMouseUp"
             PreviewMouseWheel="UserControl_PreviewMouseWheel"
             mc:Ignorable="d">
    <UserControl.FocusVisualStyle>
        <Style>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="0"
                                   Opacity="0.5"
                                   SnapsToDevicePixels="True"
                                   Stroke="{x:Static SystemColors.HotTrackBrush}"
                                   StrokeThickness="5" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.FocusVisualStyle>
    <Canvas x:Name="PlateContainer"
            ClipToBounds="True"
            SizeChanged="PlateContainer_SizeChanged">
        <d:Canvas.DataContext>
            <vm:BoardViewModel>
                <vm:BoardViewModel.Model>
                    <m:BoardModel>
                        <m:BoardModel.Keys>
                            <m:KeyModel />
                        </m:BoardModel.Keys>
                    </m:BoardModel>
                </vm:BoardViewModel.Model>
            </vm:BoardViewModel>
        </d:Canvas.DataContext>
        <Border x:Name="Plate"
                Padding="{Binding Source={mx:Double 0.5}, Converter={StaticResource ScaleConverter}, Mode=OneTime}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                SizeChanged="Plate_SizeChanged"
                Visibility="{Binding Converter={StaticResource NotNullToVisibilityConverter}}">
            <Border.RenderTransform>
                <MatrixTransform x:Name="PlateMatrixTransform" />
            </Border.RenderTransform>
            <ItemsControl x:Name="PlateCanvasContainer"
                          Width="{Binding CanvasSize.Width, Converter={StaticResource ScaleConverter}}"
                          Height="{Binding CanvasSize.Height, Converter={StaticResource ScaleConverter}}"
                          v:BoardView.PlateCanvasOffset="{Binding CanvasOffset, Converter={StaticResource ScaleConverter}}"
                          Focusable="False"
                          ItemsSource="{Binding Keys}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Margin="{Binding Path=(v:BoardView.PlateCanvasOffset), RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
                            <Canvas.Effect>
                                <DropShadowEffect BlurRadius="{Binding Source={mx:Double 0.5}, Converter={StaticResource ScaleConverter}, Mode=OneTime}"
                                                  Opacity="0.25"
                                                  ShadowDepth="0" />
                            </Canvas.Effect>
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Canvas.Left" Value="{Binding Position.X, Converter={StaticResource ScaleConverter}}" />
                        <Setter Property="Canvas.Top" Value="{Binding Position.Y, Converter={StaticResource ScaleConverter}}" />
                        <Setter Property="Width" Value="{Binding Size.Width, Converter={StaticResource ScaleConverter}}" />
                        <Setter Property="Height" Value="{Binding Size.Height, Converter={StaticResource ScaleConverter}}" />
                        <Setter Property="Opacity" Value="1" />
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <TransformGroup>
                                    <RotateTransform Angle="{Binding RotateTransform.Angle}" CenterX="{Binding RotateTransform.CenterX, Converter={StaticResource ScaleConverter}}" CenterY="{Binding RotateTransform.CenterY, Converter={StaticResource ScaleConverter}}" />
                                    <TranslateTransform a:Bindable.Y="0" Y="{Binding Path=(a:Bindable.Y), RelativeSource={RelativeSource Self}, Converter={StaticResource ScaleConverter}}" />
                                </TransformGroup>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Panel.ZIndex" Value="0" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding State, RelativeSource={RelativeSource AncestorType={x:Type v:BoardView}}}" Value="{x:Static v:BoardState.ClickSelecting}" />
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <Int32Animation Storyboard.TargetProperty="(Panel.ZIndex)"
                                                            To="-100"
                                                            Duration="0:0:0.2">
                                                <Int32Animation.EasingFunction>
                                                    <QuarticEase EasingMode="EaseOut" />
                                                </Int32Animation.EasingFunction>
                                            </Int32Animation>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(a:Bindable.Y)"
                                                             To="0.1"
                                                             Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuarticEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <Int32Animation Storyboard.TargetProperty="(Panel.ZIndex)"
                                                            To="0"
                                                            Duration="0:0:0.2">
                                                <Int32Animation.EasingFunction>
                                                    <QuarticEase EasingMode="EaseOut" />
                                                </Int32Animation.EasingFunction>
                                            </Int32Animation>
                                            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[1].(a:Bindable.Y)"
                                                             To="0"
                                                             Duration="0:0:0.2">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuarticEase EasingMode="EaseOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:KeyViewModel}">
                        <Canvas x:Name="Root"
                                v:BoardView.Bounds="{Binding ActualBounds}"
                                v:BoardView.IsSelected="{Binding IsSelected}"
                                Background="{x:Null}">
                            <Path x:Name="MainPolygon"
                                  Data="{Binding Shape, Converter={StaticResource ScaleConverter}}"
                                  Stroke="#666"
                                  StrokeThickness="{Binding Source={mx:Double 0.03}, Converter={StaticResource ScaleConverter}, Mode=OneTime}">
                                <Path.Style>
                                    <Style TargetType="{x:Type Path}">
                                        <Setter Property="Fill" Value="#EEE " />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                                    <Condition Value="True">
                                                        <Condition.Binding>
                                                            <MultiBinding Converter="{StaticResource ContainsConverter}">
                                                                <Binding Path="State" RelativeSource="{RelativeSource AncestorType={x:Type v:BoardView}}" />
                                                                <Binding Source="{x:Static v:BoardState.None}" />
                                                                <Binding Source="{x:Static v:BoardState.ClickSelecting}" />
                                                            </MultiBinding>
                                                        </Condition.Binding>
                                                    </Condition>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Fill" Value="#DDD" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                            <Path Data="{Binding Data, ElementName=MainPolygon}"
                                  IsHitTestVisible="False"
                                  Opacity="0.2"
                                  Stroke="{Binding Stroke, ElementName=MainPolygon}"
                                  StrokeThickness="{Binding StrokeThickness, ElementName=MainPolygon}">
                                <Path.Style>
                                    <Style TargetType="{x:Type Path}">
                                        <Setter Property="Fill" Value="#FF00ED20" />
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(v:BoardView.IsSelected), ElementName=Root}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=(v:BoardView.IsPreviewSelected), ElementName=Root}" Value="True">
                                                <Setter Property="Fill" Value="#FFDB4B4B" />
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Path.Style>
                            </Path>
                            <Grid Width="{Binding Size.Width, Converter={StaticResource ScaleConverter}}"
                                  Height="{Binding Size.Height, Converter={StaticResource ScaleConverter}}"
                                  IsHitTestVisible="False" />
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Border>
        <Rectangle x:Name="SelectionBox"
                   IsHitTestVisible="False"
                   Stroke="{x:Static SystemColors.HighlightBrush}"
                   StrokeDashArray="4,2"
                   StrokeThickness="2">
            <Rectangle.Fill>
                <SolidColorBrush Opacity="0.2" Color="{x:Static SystemColors.HighlightColor}" />
            </Rectangle.Fill>
            <Rectangle.Style>
                <Style TargetType="{x:Type Rectangle}">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding State, RelativeSource={RelativeSource AncestorType={x:Type v:BoardView}}}" Value="{x:Static v:BoardState.DragSelecting}">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Rectangle.Style>
        </Rectangle>
    </Canvas>
</UserControl>
